@using FamilyHubs.SharedKernel.Razor.FullPages
@using FamilyHubs.SharedKernel.Razor.Errors
@model ISingleTextboxPageModel

<!-- This control can only be used when there are no other inputs on the page -->

@* todo: use ErrorState instead *@
@* todo: set page title in here as well? (remember need to change caller's viewdata *@
@* todo: need to support heading and label, and just one combined. 1 interface/partial or >1 ?*@

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <partial name="_ErrorSummary" model="Model.Errors"/>

        <form method="post" novalidate>

            @if (!string.IsNullOrEmpty(Model.HeadingText))
            {
                @* not even the GDS error summary page is consistent in whether the heading goes in the form-group or not!
                   so we follow the prototype's lead (which I think looks better anyway).*@
                <h1 class="govuk-heading-l">@Model.HeadingText</h1>
            }

            <div class="govuk-form-group @(Model.Errors.HasErrors ? "govuk-form-group--error" : "")">

                @if (!string.IsNullOrEmpty(Model.HeadingText))
                {
                    @* todo: partial for hint? *@
                    if (!string.IsNullOrEmpty(Model.HintText))
                    {
                        <div id="hint" class="govuk-hint">
                            @Model.HintText
                        </div>
                    }
                    <label class="govuk-label" for="textbox">
                        @Model.TextBoxLabel
                    </label>
                }
                else
                {
                    <h1 class="govuk-label-wrapper">
                        <label class="govuk-label govuk-label--l" for="textbox">
                            @Model.TextBoxLabel
                        </label>
                    </h1>

                    if (!string.IsNullOrEmpty(Model.HintText))
                    {
                        <div id="hint" class="govuk-hint">
                            @Model.HintText
                        </div>
                    }
                }

                @{Error? error = Model.Errors.GetErrorIfTriggered(); }
                <partial name="_ErrorMessage" model="error"/>

                @{
                    // we could get type, inputmode and autocomplete from the interface itself (if we swapped the text to base and introduced a text derived)
                    // which in some ways would be neat, but it would mean that view info would be out of the view and in the interfaces
                    string type = Model switch
                    {
                        ISingleTelephoneTextboxPageModel => "tel",
                        ISingleEmailTextboxPageModel => "email",
                        _ => "text"
                        };
                }
                @* we're currently using this to gather details (name, email) that are not the person filling in the form. *@
                @* so it doesn't make sense to autocomplete with the user's details, so we set it to off (despite GDS guidelines). *@
                @* we might end up setting autocomplete anyway, as it can help with accessibility tools. *@

                @* we're' currently using this to gather emails, which GDS recommends to switch spellcheck off for, *@
                @* and to gather names and telephone numbers, for which it doesn't make sense to have spellcheck enabled. *@

                @* todo: flags for spellcheck, autocomplete etc.?*@
                @* todo: support govuk-input--width *@

                <input class="govuk-input @(Model.Errors.HasErrors ? "govuk-input--error" : "")"
                       name="TextBoxValue" type="@type" value="@Model.TextBoxValue" inputmode="@type"
                       spellcheck="false" autocomplete="off" id="textbox"
                       aria-describedby="@(string.IsNullOrEmpty(Model.HintText) ? "" : "hint ")@error?.InputErrorMessageParaId">
            </div>
            <button type="submit" class="govuk-button" data-module="govuk-button">
                Continue
            </button>
        </form>
    </div>
</div>
