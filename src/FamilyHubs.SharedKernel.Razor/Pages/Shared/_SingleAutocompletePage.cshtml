@model FamilyHubs.SharedKernel.Razor.FullPages.SingleAutocomplete.ISingleAutocompletePageModel
@{
    const string selectId = "select";
    Model.Errors.ErrorIdToHtmlElementId = _ => selectId;
}

<partial name="_ErrorSummaryNext" for="@Model.Errors" />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        @* we don't care which error we get if there are multiple errors *@
        @{ var error = Model.Errors.GetErrorIfTriggered(); }
        
        @*todo: aria-describedby="@error?.InputErrorMessageParaId" *@
        @*todo: accessibility: label (visually hidden perhaps), aria, etc*@
        
        <form method="post" novalidate>
            <div class="govuk-form-group @error?.FormGroupClass">
                <h1 class="govuk-label-wrapper">
                    <label class="govuk-label govuk-label--l" for="@selectId">
                        @Model.Label
                    </label>
                </h1>

                @if (Model.Hint != null)
                {
                    <div class="govuk-hint">
                        @Model.Hint
                    </div>
                }
                <partial name="_ErrorMessageNext" model="error"/>

                <select id="@selectId" class="govuk-select" name="SelectedValue" data-module="fh-autocomplete">
                    @if (Model.DisabledOptionValue != null)
                    {
                        <option value="@Model.DisabledOptionValue" selected disabled></option>
                    }
                    @foreach (var option in Model.Options)
                    {
                        <option value="@option.Value">@option.Label</option>
                    }
                </select>
            </div>
            <button type="submit" class="govuk-button" data-module="govuk-button">
                @Model.ButtonText
            </button>
        </form>
    </div>
</div>