// js components were originally snaffled from https://github.com/alphagov/govuk-design-system/blob/main/src/javascripts/components/
import CookieBanner from './components/cookie-banner';
import CookiesPage from './components/cookies-page';
import initAnalytics from './components/analytics';
import { initializeAddAnother } from './components/add-another';
import { initializeBackButtons } from './components/back-links';
import { initializeVisibilityToggles } from './components/visibility-toggle';
import { OpenCloseButton } from './components/open-close-button';
//todo: consistency in module/proto/class style
window.FamilyHubsFrontend = window.FamilyHubsFrontend || {};
window.FamilyHubsFrontend.initAll = () => {
    // Initialise cookie banner
    const $cookieBanner = document.querySelector('[data-module="govuk-cookie-banner"]');
    new CookieBanner($cookieBanner).init();
    initAnalytics(window.GA_MEASUREMENT_ID);
    //todo: move this into scripts section on cookie page
    // Initialise cookie page
    var $cookiesPage = document.querySelector('[data-module="fh-cookies-page"]');
    new CookiesPage($cookiesPage).init();
    initializeBackButtons();
    initializeVisibilityToggles();
    initializeAddAnother();
    // initialise open close buttons
    let openCloseButtons = document.querySelectorAll('button[data-open-close-mobile]');
    openCloseButtons === null || openCloseButtons === void 0 ? void 0 : openCloseButtons.forEach((openCloseButton) => {
        new OpenCloseButton(openCloseButton);
    });
};
//todo: do we want to do this...
//document.addEventListener("DOMContentLoaded", function () {
window.GOVUKFrontend.initAll();
window.MOJFrontend.initAll();
window.FamilyHubsFrontend.initAll();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhbWlseWh1YnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0lBQW9JO0FBcUJwSSxPQUFPLFlBQVksTUFBTSw0QkFBNEIsQ0FBQTtBQUNyRCxPQUFPLFdBQVcsTUFBTSwyQkFBMkIsQ0FBQTtBQUNuRCxPQUFPLGFBQWEsTUFBTSx3QkFBd0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFakUsK0NBQStDO0FBRS9DLE1BQU0sQ0FBQyxrQkFBa0IsR0FBRyxNQUFNLENBQUMsa0JBQWtCLElBQUksRUFBRSxDQUFDO0FBQzVELE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLEdBQUcsR0FBRyxFQUFFO0lBRXJDLDJCQUEyQjtJQUMzQixNQUFNLGFBQWEsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLHFDQUFxQyxDQUF1QixDQUFDO0lBQzFHLElBQUksWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0lBRXZDLGFBQWEsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUV4QyxxREFBcUQ7SUFDckQseUJBQXlCO0lBQ3pCLElBQUksWUFBWSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsaUNBQWlDLENBQUMsQ0FBQztJQUM3RSxJQUFJLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUVyQyxxQkFBcUIsRUFBRSxDQUFDO0lBQ3hCLDJCQUEyQixFQUFFLENBQUM7SUFDOUIsb0JBQW9CLEVBQUUsQ0FBQztJQUV2QixnQ0FBZ0M7SUFDaEMsSUFBSSxnQkFBZ0IsR0FBa0MsUUFBUSxDQUFDLGdCQUFnQixDQUFDLGdDQUFnQyxDQUFDLENBQUM7SUFDbEgsZ0JBQWdCLGFBQWhCLGdCQUFnQix1QkFBaEIsZ0JBQWdCLENBQUUsT0FBTyxDQUFDLENBQUMsZUFBZSxFQUFFLEVBQUU7UUFDMUMsSUFBSSxlQUFlLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDekMsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUM7QUFFRixnQ0FBZ0M7QUFDaEMsNkRBQTZEO0FBRTdELE1BQU0sQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDL0IsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUM3QixNQUFNLENBQUMsa0JBQWtCLENBQUMsT0FBTyxFQUFFLENBQUMiLCJmaWxlIjoiZmFtaWx5aHVicy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGpzIGNvbXBvbmVudHMgd2VyZSBvcmlnaW5hbGx5IHNuYWZmbGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2FscGhhZ292L2dvdnVrLWRlc2lnbi1zeXN0ZW0vYmxvYi9tYWluL3NyYy9qYXZhc2NyaXB0cy9jb21wb25lbnRzL1xyXG5cclxuLy90b2RvOiBzd2FwIHRvIGEgY29tcG9uZW50cyBmb2xkZXI/XHJcblxyXG5kZWNsYXJlIGdsb2JhbCB7XHJcbiAgICBpbnRlcmZhY2UgV2luZG93IHtcclxuICAgICAgICBHRFNfQ09OU0VOVF9DT09LSUVfVkVSU0lPTjogbnVtYmVyO1xyXG4gICAgICAgIEdBX01FQVNVUkVNRU5UX0lEOiBzdHJpbmc7XHJcbiAgICAgICAgR0FfQ09OVEFJTkVSX0lEOiBzdHJpbmc7XHJcbiAgICAgICAgR0FfQ09PS0lFX05BTUU6IHN0cmluZztcclxuICAgICAgICBkYXRhTGF5ZXI6IGFueVtdO1xyXG4gICAgICAgIEZhbWlseUh1YnNGcm9udGVuZDogYW55O1xyXG4gICAgICAgIEdPVlVLRnJvbnRlbmQ6IHtcclxuICAgICAgICAgICAgaW5pdEFsbDogKCkgPT4gdm9pZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgTU9KRnJvbnRlbmQ6IHtcclxuICAgICAgICAgICAgaW5pdEFsbDogKCkgPT4gdm9pZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmltcG9ydCBDb29raWVCYW5uZXIgZnJvbSAnLi9jb21wb25lbnRzL2Nvb2tpZS1iYW5uZXInXHJcbmltcG9ydCBDb29raWVzUGFnZSBmcm9tICcuL2NvbXBvbmVudHMvY29va2llcy1wYWdlJ1xyXG5pbXBvcnQgaW5pdEFuYWx5dGljcyBmcm9tICcuL2NvbXBvbmVudHMvYW5hbHl0aWNzJztcclxuaW1wb3J0IHsgaW5pdGlhbGl6ZUFkZEFub3RoZXIgfSBmcm9tICcuL2NvbXBvbmVudHMvYWRkLWFub3RoZXInO1xyXG5pbXBvcnQgeyBpbml0aWFsaXplQmFja0J1dHRvbnMgfSBmcm9tICcuL2NvbXBvbmVudHMvYmFjay1saW5rcyc7XHJcbmltcG9ydCB7IGluaXRpYWxpemVWaXNpYmlsaXR5VG9nZ2xlcyB9IGZyb20gJy4vY29tcG9uZW50cy92aXNpYmlsaXR5LXRvZ2dsZSc7XHJcbmltcG9ydCB7IE9wZW5DbG9zZUJ1dHRvbiB9IGZyb20gJy4vY29tcG9uZW50cy9vcGVuLWNsb3NlLWJ1dHRvbic7XHJcblxyXG4vL3RvZG86IGNvbnNpc3RlbmN5IGluIG1vZHVsZS9wcm90by9jbGFzcyBzdHlsZVxyXG5cclxud2luZG93LkZhbWlseUh1YnNGcm9udGVuZCA9IHdpbmRvdy5GYW1pbHlIdWJzRnJvbnRlbmQgfHwge307XHJcbndpbmRvdy5GYW1pbHlIdWJzRnJvbnRlbmQuaW5pdEFsbCA9ICgpID0+IHtcclxuXHJcbiAgICAvLyBJbml0aWFsaXNlIGNvb2tpZSBiYW5uZXJcclxuICAgIGNvbnN0ICRjb29raWVCYW5uZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tb2R1bGU9XCJnb3Z1ay1jb29raWUtYmFubmVyXCJdJykgYXMgSFRNTEVsZW1lbnQgfCBudWxsO1xyXG4gICAgbmV3IENvb2tpZUJhbm5lcigkY29va2llQmFubmVyKS5pbml0KCk7XHJcblxyXG4gICAgaW5pdEFuYWx5dGljcyh3aW5kb3cuR0FfTUVBU1VSRU1FTlRfSUQpO1xyXG5cclxuICAgIC8vdG9kbzogbW92ZSB0aGlzIGludG8gc2NyaXB0cyBzZWN0aW9uIG9uIGNvb2tpZSBwYWdlXHJcbiAgICAvLyBJbml0aWFsaXNlIGNvb2tpZSBwYWdlXHJcbiAgICB2YXIgJGNvb2tpZXNQYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtbW9kdWxlPVwiZmgtY29va2llcy1wYWdlXCJdJyk7XHJcbiAgICBuZXcgQ29va2llc1BhZ2UoJGNvb2tpZXNQYWdlKS5pbml0KCk7XHJcblxyXG4gICAgaW5pdGlhbGl6ZUJhY2tCdXR0b25zKCk7XHJcbiAgICBpbml0aWFsaXplVmlzaWJpbGl0eVRvZ2dsZXMoKTtcclxuICAgIGluaXRpYWxpemVBZGRBbm90aGVyKCk7XHJcblxyXG4gICAgLy8gaW5pdGlhbGlzZSBvcGVuIGNsb3NlIGJ1dHRvbnNcclxuICAgIGxldCBvcGVuQ2xvc2VCdXR0b25zOiBOb2RlTGlzdE9mPEhUTUxCdXR0b25FbGVtZW50PiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbltkYXRhLW9wZW4tY2xvc2UtbW9iaWxlXScpO1xyXG4gICAgb3BlbkNsb3NlQnV0dG9ucz8uZm9yRWFjaCgob3BlbkNsb3NlQnV0dG9uKSA9PiB7XHJcbiAgICAgICAgbmV3IE9wZW5DbG9zZUJ1dHRvbihvcGVuQ2xvc2VCdXR0b24pO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG4vL3RvZG86IGRvIHdlIHdhbnQgdG8gZG8gdGhpcy4uLlxyXG4vL2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uICgpIHtcclxuXHJcbndpbmRvdy5HT1ZVS0Zyb250ZW5kLmluaXRBbGwoKTtcclxud2luZG93Lk1PSkZyb250ZW5kLmluaXRBbGwoKTtcclxud2luZG93LkZhbWlseUh1YnNGcm9udGVuZC5pbml0QWxsKCk7XHJcbiJdfQ==
